global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

scrape_configs:
  - job_name: "prometheus"
    static_configs:
  #      - targets: ["localhost:9090"]
  #        # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
  #        labels:
  #          app: "prometheus"

  - job_name: "discord-exporter"
    metrics_path: /metrics
    scheme: https
    static_configs:
      - targets:
          - trapavilion-grafana-discord-exporter.trap.show
        labels:
          app: "discord-exporter"

  - job_name: traq
    metrics_path: /api/metrics
    scheme: https
    static_configs:
      - targets:
          - q.trap.jp:443
    tls_config:
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: ([^:]+):.+
        replacement: ${1}

  - job_name: "network-exporter"
    metrics_path: /metrics
    scrape_interval: 10m
    scrape_timeout: 90s
    static_configs:
      - targets:
          - network-exporter:9801
        labels:
          app: "network-exporter"

  - job_name: "switchbot"
    scrape_interval: 1m # not to reach API rate limit
    metrics_path: /metrics
    http_sd_configs:
      - url: http://switchbot_exporter:8080/discover
        refresh_interval: 1d # no need to check for new devices very often
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: switchbot_exporter:8080 # The switchbot exporter's real ip/port

  # Time Table exporter for events timeline
  - job_name: "time_table"
    metrics_path: /metrics
    static_configs:
      - targets: ["time_table_exporter:9100"] # adjust if exporter runs on a different host/container
